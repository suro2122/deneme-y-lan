<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    canvas {
      border: 1px solid #000;
      display: block;
      margin: 20px auto;
    }
  </style>
  <title>Snake Game</title>
</head>
<body>
  <canvas id="gameCanvas" width="400" height="400"></canvas>
  <script>
    const canvas = document.getElementById("gameCanvas");
    const ctx = canvas.getContext("2d");

    const boxSize = 20;
    let snake = [{ x: 10, y: 10 }];
    let direction = "right";
    let food = { x: Math.floor(Math.random() * 20) * boxSize, y: Math.floor(Math.random() * 20) * boxSize };
    let score = 0;

    function draw() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);

      // Draw snake
      ctx.fillStyle = "#00F";
      for (let i = 0; i < snake.length; i++) {
        ctx.fillRect(snake[i].x, snake[i].y, boxSize, boxSize);
      }

      // Draw food
      ctx.fillStyle = "#F00";
      ctx.fillRect(food.x, food.y, boxSize, boxSize);

      // Draw score
      ctx.fillStyle = "#000";
      ctx.font = "20px Arial";
      ctx.fillText("Score: " + score, 10, 20);

      // Move the snake
      let headX = snake[0].x;
      let headY = snake[0].y;

      if (direction === "right") headX += boxSize;
      if (direction === "left") headX -= boxSize;
      if (direction === "up") headY -= boxSize;
      if (direction === "down") headY += boxSize;

      // Check collision with food
      if (headX === food.x && headY === food.y) {
        snake.unshift({ x: headX, y: headY });
        food = { x: Math.floor(Math.random() * 20) * boxSize, y: Math.floor(Math.random() * 20) * boxSize };
        score += 10;
      } else {
        // Remove the tail
        snake.pop();
      }

      // Check collision with walls or itself
      if (headX < 0 || headX >= canvas.width || headY < 0 || headY >= canvas.height || collision()) {
        clearInterval(gameInterval);
        alert("Game Over! Your Score: " + score);
        resetGame();
      }

      // Add new head
      snake.unshift({ x: headX, y: headY });
    }

    function collision() {
      for (let i = 1; i < snake.length; i++) {
        if (snake[i].x === snake[0].x && snake[i].y === snake[0].y) {
          return true;
        }
      }
      return false;
    }

    function changeDirection(event) {
      const keyPressed = event.key;
      if ((keyPressed === "ArrowUp" || keyPressed === "w") && direction !== "down") {
        direction = "up";
      } else if ((keyPressed === "ArrowDown" || keyPressed === "s") && direction !== "up") {
        direction = "down";
      } else if ((keyPressed === "ArrowLeft" || keyPressed === "a") && direction !== "right") {
        direction = "left";
      } else if ((keyPressed === "ArrowRight" || keyPressed === "d") && direction !== "left") {
        direction = "right";
      } else if (keyPressed === "p") {
        pauseGame();
      }
    }

    function resetGame() {
      snake = [{ x: 10, y: 10 }];
      direction = "right";
      food = { x: Math.floor(Math.random() * 20) * boxSize, y: Math.floor(Math.random() * 20) * boxSize };
      score = 0;
      gameInterval = setInterval(draw, 100);
    }

    function pauseGame() {
      clearInterval(gameInterval);
      alert("Game Paused. Press 'OK' to resume.");
      gameInterval = setInterval(draw, 100);
    }

    document.addEventListener("keydown", changeDirection);

    let gameInterval = setInterval(draw, 100);
  </script>
</body>
</html>
